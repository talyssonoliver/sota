# QA Quality Gates and Thresholds Configuration
# This file defines the quality standards and thresholds for the QA system

# Coverage thresholds for different types of testing
coverage_thresholds:
  # Line coverage - percentage of code lines executed by tests
  line_coverage:
    minimum: 80
    target: 90
    critical: 95

  # Branch coverage - percentage of code branches executed by tests
  branch_coverage:
    minimum: 75
    target: 85
    critical: 90

  # Function coverage - percentage of functions called by tests
  function_coverage:
    minimum: 85
    target: 95
    critical: 98

  # Statement coverage - percentage of statements executed
  statement_coverage:
    minimum: 80
    target: 90
    critical: 95

# Test distribution patterns
test_patterns:
  # Recommended distribution of test types
  unit_test_ratio: 0.70 # 70% unit tests
  integration_test_ratio: 0.20 # 20% integration tests
  e2e_test_ratio: 0.10 # 10% end-to-end tests

  # Minimum number of tests per component type
  min_tests_per_class: 3
  min_tests_per_function: 1
  min_tests_per_component: 5

# Quality gates - conditions that must be met for quality approval
quality_gates:
  # Minimum overall test coverage percentage
  min_test_coverage: 80

  # Maximum allowed cyclomatic complexity per function
  max_complexity: 10

  # Minimum documentation coverage percentage
  min_documentation: 70

  # Maximum number of integration gaps allowed
  max_integration_gaps: 5

  # Minimum code quality score (0-100)
  min_quality_score: 75

  # Maximum test execution time (seconds)
  max_test_execution_time: 300

  # Minimum test success rate percentage
  min_test_success_rate: 95

# Test generation preferences
test_generation:
  # Preferred test frameworks by file type
  frameworks:
    python: "pytest"
    javascript: "jest"
    typescript: "jest"

  # Test file naming patterns
  naming_patterns:
    python: "test_{filename}.py"
    javascript: "{filename}.test.js"
    typescript: "{filename}.test.ts"

  # Test directory structure
  test_directories:
    unit: "tests/unit"
    integration: "tests/integration"
    e2e: "tests/e2e"
    generated: "tests/generated"

  # Auto-generation settings
  auto_generate:
    enabled: true
    include_edge_cases: true
    include_error_scenarios: true
    include_performance_tests: false
    include_security_tests: true

# Coverage analysis settings
coverage_analysis:
  # Files and directories to include in coverage analysis
  include_patterns:
    - "*.py"
    - "*.js"
    - "*.ts"
    - "*.jsx"
    - "*.tsx"

  # Files and directories to exclude from coverage analysis
  exclude_patterns:
    - "test_*"
    - "*.test.*"
    - "__pycache__"
    - "node_modules"
    - ".git"
    - "build"
    - "dist"
    - "coverage"

  # Coverage reporting settings
  reporting:
    formats: ["html", "json", "text"]
    output_directory: "coverage_reports"
    include_source: true
    show_missing_lines: true

# Integration gap detection settings
integration_analysis:
  # Types of gaps to detect
  gap_types:
    - "missing_interface_tests"
    - "unvalidated_data_flows"
    - "missing_error_handling"
    - "incomplete_api_coverage"
    - "missing_component_interactions"

  # Severity levels for different gap types
  severity_mapping:
    missing_interface_tests: "high"
    unvalidated_data_flows: "critical"
    missing_error_handling: "high"
    incomplete_api_coverage: "medium"
    missing_component_interactions: "medium"

  # Analysis scope
  analysis_scope:
    include_external_dependencies: false
    include_system_boundaries: true
    include_data_boundaries: true

# Performance thresholds
performance:
  # Test execution performance limits
  test_execution:
    max_unit_test_time: 1.0 # seconds
    max_integration_test_time: 10.0 # seconds
    max_e2e_test_time: 60.0 # seconds

  # Resource usage limits
  resource_limits:
    max_memory_usage: 512 # MB
    max_cpu_usage: 80 # percentage
    max_file_handles: 100

# Reporting and notifications
reporting:
  # Report generation settings
  generate_reports:
    enabled: true
    formats: ["json", "html", "markdown"]
    include_trends: true
    include_recommendations: true

  # Notification settings
  notifications:
    on_quality_gate_failure: true
    on_coverage_drop: true
    on_new_integration_gaps: true

  # Report retention
  retention:
    keep_reports_days: 30
    archive_after_days: 90

# Environment-specific overrides
environments:
  development:
    coverage_thresholds:
      line_coverage:
        minimum: 70 # Relaxed for development
    quality_gates:
      min_test_coverage: 70

  staging:
    coverage_thresholds:
      line_coverage:
        minimum: 85 # Higher for staging
    quality_gates:
      min_test_coverage: 85
      max_integration_gaps: 3

  production:
    coverage_thresholds:
      line_coverage:
        minimum: 90 # Strict for production
    quality_gates:
      min_test_coverage: 90
      max_integration_gaps: 0
      min_quality_score: 85

# Advanced settings
advanced:
  # Machine learning for test suggestion
  ml_suggestions:
    enabled: false
    model_path: "models/test_suggestion_model.pkl"
    confidence_threshold: 0.8

  # Parallel execution settings
  parallel_execution:
    enabled: true
    max_workers: 4
    chunk_size: 10

  # Caching settings
  caching:
    enabled: true
    cache_directory: ".qa_cache"
    cache_duration_hours: 24
